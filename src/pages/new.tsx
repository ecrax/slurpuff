import DynamicInput from "./../components/DynamicInput";
import type { NextPage } from "next";
import { signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useRef, useState } from "react";
import { trpc } from "../utils/trpc";

const New: NextPage = () => {
  const { data: session, status } = useSession();

  const { isLoading, error, mutate } = trpc.useMutation(["recipe.create"]);

  const [ingredients, setIngredients] = useState([""]);
  const [steps, setSteps] = useState([""]);
  const [tags, setTags] = useState([""]);
  const [name, setName] = useState("");

  if (status === "loading") {
    return <p>Loading</p>;
  } else if (!session) {
    console.log("test");
    return <p>Please Sign in</p>;
  } else {
    return (
      <>
        <Head>
          <title>Create T3 App</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className="container h-screen p-8 mx-auto">
          {session && (
            <>
              <nav className="flex flex-row justify-between">
                <p>Signed in as {session.user?.email}</p>
                <button
                  onClick={() => {
                    signOut();
                  }}
                >
                  Sign out
                </button>
              </nav>
              <main className="flex flex-col items-center justify-center">
                <form
                  className="flex flex-col"
                  onSubmit={(e) => {
                    e.preventDefault();

                    console.log(name);
                    console.log("ingredients?", ingredients);
                    console.log("steps?", steps);
                    console.log("tags?", tags);
                  }}
                >
                  <label>
                    Name
                    <input
                      type="text"
                      onChange={(e) => setName(e.target.value)}
                    />
                  </label>
                  <DynamicInput
                    setState={setIngredients}
                    state={ingredients}
                    name={"Ingredients"}
                  />
                  <DynamicInput
                    setState={setSteps}
                    state={steps}
                    name={"Steps"}
                  />
                  <DynamicInput setState={setTags} state={tags} name={"Tags"} />
                  <button>Create</button>
                </form>
              </main>
            </>
          )}
        </div>
      </>
    );
  }
};

export default New;
