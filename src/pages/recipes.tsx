import type { NextPage } from "next";
import { signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { msToTime } from "../utils/time";
import { trpc } from "../utils/trpc";

const Recipes: NextPage = () => {
  const { data: session, status } = useSession();

  const { data: recipes } = trpc.useQuery(["recipe.getAll"]);

  if (status === "loading") return <p>Loading</p>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container h-screen p-8 mx-auto">
        {session ? (
          <nav className="flex flex-row justify-between">
            <p>Signed in as {session.user?.email}</p>
            <button
              onClick={() => {
                signOut();
              }}
            >
              Sign out
            </button>
          </nav>
        ) : (
          <nav className="flex flex-row justify-between">
            <div>You are not logged in</div>
          </nav>
        )}
        <main className="flex flex-col items-center justify-center">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-7">
            {recipes ? (
              recipes.map((recipe, i) => {
                return (
                  <Link key={i} href={`/recipe/${recipe.id}`}>
                    <div className="border-2 border-green-400 rounded-md">
                      <Image
                        width={300}
                        height={200}
                        src={recipe.image}
                        alt={recipe.name}
                        className="rounded"
                        objectFit="cover"
                      />
                      <div className="p-2">
                        <p>{recipe.name}</p>
                        <div className="flex flex-row">
                          <p>
                            {recipe.steps.length} Step
                            {recipe.steps.length > 1 ? "s" : ""}
                          </p>
                          <p className="px-2">â€¢</p>
                          <p>{msToTime(recipe.timeRequired)}</p>
                        </div>
                      </div>
                    </div>
                  </Link>
                );
              })
            ) : (
              <p>Loading...</p>
            )}
          </div>
        </main>
      </div>
    </>
  );
};

export default Recipes;
