import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import Navbar from "../../components/Navbar";
import { msToTime } from "../../utils/time";
import { trpc } from "../../utils/trpc";

const RecipePage: NextPage = () => {
  const { query } = useRouter();
  const { id } = query;

  if (!id || typeof id !== "string") return <div>No id</div>;

  const _id = Number.parseInt(id);
  if (Number.isNaN(_id)) return <p>Please pass a number</p>;

  return <RecipePageContent id={_id} />;
};

const RecipePageContent: React.FC<{ id: number }> = ({ id }) => {
  const { data: recipe, isLoading } = trpc.useQuery([
    "recipe.getById",
    { id: id },
  ]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container h-screen p-8 mx-auto">
        <Navbar />
        <main className="flex flex-col items-center justify-center pb-16 prose">
          {!isLoading && recipe ? (
            <div>
              <div className="py-8">
                <Image
                  src={recipe.image ?? ""}
                  width={300}
                  height={200}
                  alt={recipe.name}
                  objectFit="contain"
                />
              </div>
              <h1>{recipe.name}</h1>
              <div className="space-x-2">
                <p className="badge badge-primary">
                  {recipe.steps.length} Step
                  {recipe.steps.length > 1 ? "s" : ""}
                </p>

                <p className="badge badge-primary">
                  {msToTime(recipe.timeRequired)}
                </p>

                {recipe.tags.map((t) => (
                  <p className="badge badge-ghost" key={t}>
                    {t}
                  </p>
                ))}
              </div>

              <div>
                <h2>Ingredients</h2>
                {recipe.ingredients.map((ingr) => (
                  <div key={ingr}>
                    <span className="font-bold">
                      {ingr.substring(0, ingr.indexOf(" "))}
                    </span>{" "}
                    <span>{ingr.substring(ingr.indexOf(" ") + 1)}</span>
                  </div>
                ))}
              </div>
              <div>
                <h2>Steps</h2>
                {recipe.steps.map((s, i) => (
                  <div key={s}>
                    <span className="font-bold">{i + 1}.</span>
                    {" " + s}
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <p>Loading...</p>
          )}
        </main>
      </div>
    </>
  );
};

export default RecipePage;
